function full_data_struct = temp_get_hic_data_multiple_lines(varargin)
% Read raw hi-c data files an extract 1d profiles around a given region

params = {'position',...
    'gene_name',...
    'chromosome',...
    'cell_lines',...
    'resolution',...
    'width'};
dflts = {[],...
    '',...
    '',...
    '',...
    [],...
    []};
arg = parse_args(params,dflts,varargin{:});

assert(isequal(length(arg.position),length(arg.gene_name)));
full_data_struct = struct([]);
for ii = 1:length(arg.cell_lines)
    ii
    %% Read data
    hic_data = importdata(sprintf('~/Documents/genome_arch/data/hic/%s/%dkb_resolution_intrachromosomal/%s/MAPQG0/%s_%dkb.RAWobserved',arg.cell_lines{ii},arg.resolution,arg.chromosome,arg.chromosome,arg.resolution),'\t');
    hic_norm_vector = importdata(sprintf('~/Documents/genome_arch/data/hic/%s/%dkb_resolution_intrachromosomal/%s/MAPQG0/%s_%dkb.KRnorm',arg.cell_lines{ii},arg.resolution,arg.chromosome,arg.chromosome,arg.resolution),'\t');

    cell_struct = struct([]);
    for jj = 1:length(arg.position)
        jj
        local_hic_data = get_local_hic_data('full_hic_data',hic_data,...
            'position',arg.position(jj),...
            'resolution',arg.resolution,...
            'width',arg.width,...
            'kr_normalize',true,...
            'normalization_vector',hic_norm_vector,...
            'peak_normalize',true);

        this_cell_struct = struct('cell_line',arg.cell_lines(ii),...
            'gene_name',arg.gene_name(jj),...
            'gene_position',arg.position(jj),...
            'genome_coordinates',local_hic_data(:,1),...
            'hic_contacts',local_hic_data(:,2));

        cell_struct = [cell_struct; this_cell_struct];
    end

data_struct = struct('cell_line',arg.cell_lines(ii),'hic_data',cell_struct);
full_data_struct = [full_data_struct; data_struct];
end

%% Make into a 2-d struct array
full_data_struct = [full_data_struct.hic_data];
end

